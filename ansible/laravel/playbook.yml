---
- hosts: api01
  gather_facts: false
  become: true
  vars:
    ansible_python_interpreter: /usr/bin/python3

  tasks:
    - name: "sudo apt update"
      apt:
        update_cache: yes
      tags:
        - system

    - name: "APT - 도커 GPG key 추가"
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: "APT - 도커 리파지토리 추가"
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"
        state: present
        filename: docker

    - name: "APT - 기본 패키지 설치"
      apt:
        pkg:
          - "apt-transport-https"
          - "ca-certificates"
          - "curl"
          - "vim"
          - "python3-pip"
          - "software-properties-common"
        state: present

    - name: "PIP - docker-py 패키지 설치"
      pip:
        name: "docker-py"

    - name: "APT - 도커 설치"
      apt:
        name: "docker-ce"
        update_cache: yes

    - name: "도커 - 레지스트리 로그인"
      docker_login:
        registry: registry.hanlingo.com
        username: jenkins
        password: dhfgoRhr1djrekftjd!
        reauthorize: yes

    - name: "디렉토리 생성 - /opt/conf.d"
      file:
        path: /opt/conf.d
        state: directory

    - name: "파일복사 - nginx 리버스 프락시 설정 config"
      copy:
        src: "./files/nginx.conf"
        dest: "/opt/conf.d/proxy.conf"
        mode: 0644

    - name: "파일복사 - rolling deployment bash script"
      copy:
        src: "./files/deploy.sh"
        dest: "/opt/deploy"
        mode: 0755

    - name: "sudo apt autoclean"
      apt:
        autoclean: yes
      tags:
        - system

    - name: "sudo apt autoremove"
      apt:
        autoremove: yes
      tags:
        - system
